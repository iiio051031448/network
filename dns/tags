!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUF_SIZE	smart_dns.c	12;"	d	file:
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-Wall$/;"	m
DNS_FLAGS_ST	smart_dns.c	/^}__attribute__((packed)) DNS_FLAGS_ST;$/;"	t	typeref:struct:dns_flags	file:
LDFLAGS	Makefile	/^LDFLAGS=-Wall$/;"	m
OBJS	Makefile	/^OBJS=smart_dns.o debug.o str.o$/;"	m
SERVER_PORT	smart_dns.c	11;"	d	file:
S_DNS_HEADER_ST	smart_dns.c	/^}__attribute__((packed)) S_DNS_HEADER_ST;$/;"	t	typeref:struct:s_dns_header	file:
S_DNS_RRS_ST	smart_dns.c	/^}__attribute__((packed)) S_DNS_RRS_ST;$/;"	t	typeref:struct:dns_rrs_tag	file:
TARGET	Makefile	/^TARGET=sdns$/;"	m
_LOG	sdns.h	4;"	d
__DUMP_DATA	sdns.h	8;"	d
__SDNS_H__	sdns.h	2;"	d
aa	smart_dns.c	/^                   aa:1,$/;"	m	struct:dns_flags	file:	access:public
an_cnt	smart_dns.c	/^    unsigned short an_cnt;$/;"	m	struct:s_dns_header	file:	access:public
ar_cnt	smart_dns.c	/^    unsigned short ar_cnt;$/;"	m	struct:s_dns_header	file:	access:public
bits	smart_dns.c	/^    struct dns_flags bits;$/;"	m	union:flags_un	typeref:struct:flags_un::dns_flags	file:	access:public
class	smart_dns.c	/^    unsigned short class;$/;"	m	struct:dns_rrs_tag	file:	access:public
dns_flags	smart_dns.c	/^typedef struct dns_flags {$/;"	s	file:
dns_flags::aa	smart_dns.c	/^                   aa:1,$/;"	m	struct:dns_flags	file:	access:public
dns_flags::opcode	smart_dns.c	/^                   opcode:4,$/;"	m	struct:dns_flags	file:	access:public
dns_flags::qr	smart_dns.c	/^                   qr:1;$/;"	m	struct:dns_flags	file:	access:public
dns_flags::ra	smart_dns.c	/^                   ra:1,$/;"	m	struct:dns_flags	file:	access:public
dns_flags::rcode	smart_dns.c	/^    unsigned short rcode:4,$/;"	m	struct:dns_flags	file:	access:public
dns_flags::rd	smart_dns.c	/^                   rd:1,$/;"	m	struct:dns_flags	file:	access:public
dns_flags::tc	smart_dns.c	/^                   tc:1,$/;"	m	struct:dns_flags	file:	access:public
dns_flags::z	smart_dns.c	/^                   z:3,$/;"	m	struct:dns_flags	file:	access:public
dns_rrs_tag	smart_dns.c	/^typedef struct dns_rrs_tag$/;"	s	file:
dns_rrs_tag::class	smart_dns.c	/^    unsigned short class;$/;"	m	struct:dns_rrs_tag	file:	access:public
dns_rrs_tag::ip	smart_dns.c	/^    unsigned long  ip;$/;"	m	struct:dns_rrs_tag	file:	access:public
dns_rrs_tag::len	smart_dns.c	/^    unsigned short len;$/;"	m	struct:dns_rrs_tag	file:	access:public
dns_rrs_tag::name	smart_dns.c	/^    unsigned short name;$/;"	m	struct:dns_rrs_tag	file:	access:public
dns_rrs_tag::ttl	smart_dns.c	/^    unsigned long  ttl;$/;"	m	struct:dns_rrs_tag	file:	access:public
dns_rrs_tag::type	smart_dns.c	/^    unsigned short type;$/;"	m	struct:dns_rrs_tag	file:	access:public
dump_data	debug.c	/^void dump_data(unsigned char*buff, int count, const char *func, int line)$/;"	f	signature:(unsigned char*buff, int count, const char *func, int line)
dump_data	sdns.h	/^void dump_data(unsigned char*buff, int count, const char *func, int line);$/;"	p	signature:(unsigned char*buff, int count, const char *func, int line)
extract_domain_name	smart_dns.c	/^static int extract_domain_name(char *str, char *name, int maxlen)$/;"	f	file:	signature:(char *str, char *name, int maxlen)
flags	smart_dns.c	/^    union flags_un flags;$/;"	m	struct:s_dns_header	typeref:union:s_dns_header::flags_un	file:	access:public
flags_un	smart_dns.c	/^union flags_un {$/;"	u	file:
flags_un::bits	smart_dns.c	/^    struct dns_flags bits;$/;"	m	union:flags_un	typeref:struct:flags_un::dns_flags	file:	access:public
flags_un::unit	smart_dns.c	/^    unsigned short unit;$/;"	m	union:flags_un	file:	access:public
g_srv_fd	smart_dns.c	/^static int g_srv_fd = -1;$/;"	v	file:
handle_msg	smart_dns.c	/^static int handle_msg(const char *msg, int msg_len, struct sockaddr_in *clt_addr)$/;"	f	file:	signature:(const char *msg, int msg_len, struct sockaddr_in *clt_addr)
id	smart_dns.c	/^    unsigned short id;$/;"	m	struct:s_dns_header	file:	access:public
ip	smart_dns.c	/^    unsigned long  ip;$/;"	m	struct:dns_rrs_tag	file:	access:public
ip2str	sdns.h	/^char *ip2str(unsigned int ipv4, char *str_ip, unsigned int str_len);$/;"	p	signature:(unsigned int ipv4, char *str_ip, unsigned int str_len)
ip2str	str.c	/^char *ip2str(unsigned int ipv4, char *str_ip, unsigned int str_len)$/;"	f	signature:(unsigned int ipv4, char *str_ip, unsigned int str_len)
len	smart_dns.c	/^    unsigned short len;$/;"	m	struct:dns_rrs_tag	file:	access:public
main	smart_dns.c	/^int main(void)$/;"	f	signature:(void)
name	smart_dns.c	/^    unsigned short name;$/;"	m	struct:dns_rrs_tag	file:	access:public
ns_cnt	smart_dns.c	/^    unsigned short ns_cnt;$/;"	m	struct:s_dns_header	file:	access:public
opcode	smart_dns.c	/^                   opcode:4,$/;"	m	struct:dns_flags	file:	access:public
qr	smart_dns.c	/^                   qr:1;$/;"	m	struct:dns_flags	file:	access:public
qr_cnt	smart_dns.c	/^    unsigned short qr_cnt;$/;"	m	struct:s_dns_header	file:	access:public
ra	smart_dns.c	/^                   ra:1,$/;"	m	struct:dns_flags	file:	access:public
rcode	smart_dns.c	/^    unsigned short rcode:4,$/;"	m	struct:dns_flags	file:	access:public
rd	smart_dns.c	/^                   rd:1,$/;"	m	struct:dns_flags	file:	access:public
s_dns_header	smart_dns.c	/^typedef struct s_dns_header$/;"	s	file:
s_dns_header::an_cnt	smart_dns.c	/^    unsigned short an_cnt;$/;"	m	struct:s_dns_header	file:	access:public
s_dns_header::ar_cnt	smart_dns.c	/^    unsigned short ar_cnt;$/;"	m	struct:s_dns_header	file:	access:public
s_dns_header::flags	smart_dns.c	/^    union flags_un flags;$/;"	m	struct:s_dns_header	typeref:union:s_dns_header::flags_un	file:	access:public
s_dns_header::id	smart_dns.c	/^    unsigned short id;$/;"	m	struct:s_dns_header	file:	access:public
s_dns_header::ns_cnt	smart_dns.c	/^    unsigned short ns_cnt;$/;"	m	struct:s_dns_header	file:	access:public
s_dns_header::qr_cnt	smart_dns.c	/^    unsigned short qr_cnt;$/;"	m	struct:s_dns_header	file:	access:public
send_dns_response	smart_dns.c	/^int send_dns_response(int dst_ip, short dst_port, char *resp, int resp_len)$/;"	f	signature:(int dst_ip, short dst_port, char *resp, int resp_len)
str2ip	sdns.h	/^unsigned int str2ip(const char *ipstr);$/;"	p	signature:(const char *ipstr)
str2ip	str.c	/^unsigned int str2ip(const char *ipstr)$/;"	f	signature:(const char *ipstr)
tc	smart_dns.c	/^                   tc:1,$/;"	m	struct:dns_flags	file:	access:public
ttl	smart_dns.c	/^    unsigned long  ttl;$/;"	m	struct:dns_rrs_tag	file:	access:public
type	smart_dns.c	/^    unsigned short type;$/;"	m	struct:dns_rrs_tag	file:	access:public
unit	smart_dns.c	/^    unsigned short unit;$/;"	m	union:flags_un	file:	access:public
wait_msg	smart_dns.c	/^int wait_msg(int srv_fd)$/;"	f	signature:(int srv_fd)
z	smart_dns.c	/^                   z:3,$/;"	m	struct:dns_flags	file:	access:public
